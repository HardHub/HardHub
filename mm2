--[[
📚 Read:

⚠️- DOESN'T WORK ON SOLARA

⚠️- IF THE SCRIPT DOESN'T WORK, EXIT THE GAME AND WAIT 4-6 HOURS AND RE-EXECUTE, UNTIL IT WORKS

📜- This script is in beta version, so it may have some bugs.

🔨- Script fully made by *zflixy_* (discord)

🦠- Alt account detection system (may not work)

🔓- keyless

💾- dupe and trade scam does not work on private servers
]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v86=v2(v0(v30,16));if v19 then local v110=v5(v86,v19);v19=nil;return v110;else return v86;end end end);local function v20(v31,v32,v33) if v33 then local v87=0 -(877 -(282 + 595)) ;local v88;while true do if (v87==(0 -(1637 -(1523 + 114)))) then v88=(v31/((3 -1)^(v32-(2 -1))))%((621 -(555 + 64))^(((v33-1) -(v32-(932 -(857 + 74)))) + (569 -(367 + 181 + 20)))) ;return v88-(v88%(928 -(214 + 713))) ;end end else local v89=2^(v32-(1 + (0 -0))) ;return (((v31%(v89 + v89))>=v89) and 1) or (0 + 0) ;end end local function v21() local v34=0;local v35;while true do if (v34==((2023 -(892 + 65)) -((162 -94) + 997))) then return v35;end if (v34==(1270 -(226 + (1929 -885)))) then v35=v1(v16,v18,v18);v18=v18 + (4 -3) ;v34=1 + 0 ;end end end local function v22() local v36,v37=v1(v16,v18,v18 + (3 -1) );v18=v18 + (352 -(87 + 263)) ;return (v37 * (436 -(67 + 113))) + v36 ;end local function v23() local v38,v39,v40,v41=v1(v16,v18,v18 + 3 );v18=v18 + 3 + 1 ;return (v41 * (41190819 -24413603)) + (v40 * (48199 + 17337)) + (v39 * (1017 -761)) + v38 ;end local function v24() local v42=0;local v43;local v44;local v45;local v46;local v47;local v48;while true do if (v42==(955 -(802 + 150))) then if (v47==(0 -0)) then if (v46==(0 -0)) then return v48 * ((1486 -(998 + 488)) + 0 + 0) ;else v47=998 -(915 + 82) ;v45=(0 + 0) -0 ;end elseif (v47==(1193 + 854)) then return ((v46==(0 -0)) and (v48 * ((1188 -((1841 -(201 + 571)) + 118))/0))) or (v48 * NaN) ;end return v8(v48,v47-(2320 -(2435 -(116 + 1022))) ) * (v45 + (v46/((3 -(4 -3))^52))) ;end if (v42==0) then v43=v23();v44=v23();v42=1;end if (v42==(1 + 1)) then v47=v20(v44,37 -16 ,31 + 0 );v48=((v20(v44,823 -(368 + 423) )==(3 -2)) and  -1) or ((12 + 7) -((36 -26) + 8)) ;v42=11 -8 ;end if (v42==(443 -(416 + 26))) then v45=1;v46=(v20(v44,3 -2 ,9 + 11 ) * ((3 -1)^(470 -(145 + 293)))) + v43 ;v42=432 -(44 + 386) ;end end end local function v25(v49) local v50=0 -0 ;local v51;local v52;while true do if (v50==((4081 -3219) -(814 + 45))) then return v6(v52);end if (v50==(4 -2)) then v52={};for v111=1 + 0 , #v51 do v52[v111]=v2(v1(v3(v51,v111,v111)));end v50=2 + 1 ;end if (v50==(885 -(261 + 624))) then v51=nil;if  not v49 then local v117=0;while true do if (v117==(0 -0)) then v49=v23();if (v49==(1080 -(1020 + 24 + 36))) then return "";end break;end end end v50=1424 -((2169 -1539) + 793) ;end if (v50==(1748 -(760 + 987))) then v51=v3(v16,v18,(v18 + v49) -(3 -2) );v18=v18 + v49 ;v50=2;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v53=(function() return function(v90,v91,v92,v93,v94,v95,v96,v97) local v90=(function() return 0;end)();local v91=(function() return;end)();local v92=(function() return;end)();while true do if (v90== #"!") then if (v91== #"|") then v92=(function() return v93()~=(202 -(14 + 188)) ;end)();elseif (v91==(677 -(534 + 141))) then v92=(function() return v94();end)();elseif (v91== #"-19") then v92=(function() return v95();end)();end v96[v97]=(function() return v92;end)();break;end if ((0 + 0)==v90) then local v119=(function() return 0;end)();local v120=(function() return;end)();while true do if (v119~=(0 + 0)) then else v120=(function() return 0 + 0 ;end)();while true do if (v120~=(0 -0)) then else v91=(function() return v93();end)();v92=(function() return nil;end)();v120=(function() return 1 -0 ;end)();end if (v120==1) then v90=(function() return  #":";end)();break;end end break;end end end end return v90,v91,v92,v93,v94,v95,v96,v97;end;end)();local v54=(function() return function(v98,v99,v100) local v101=(function() return 0;end)();local v102=(function() return;end)();while true do if (v101==(0 -0)) then v102=(function() return 0 + 0 ;end)();while true do if (v102~=0) then else local v124=(function() return 0;end)();while true do if (v124==0) then v98[v99-#" " ]=(function() return v100();end)();return v98,v99,v100;end end end end break;end end end;end)();local v55=(function() return {};end)();local v56=(function() return {};end)();local v57=(function() return {};end)();local v58=(function() return {v55,v56,nil,v57};end)();local v59=(function() return v23();end)();local v60=(function() return {};end)();for v68= #"|",v59 do FlatIdent_31905,Type,Cons,v21,v24,v25,v60,v68=(function() return v53(FlatIdent_31905,Type,Cons,v21,v24,v25,v60,v68);end)();end v58[ #"91("]=(function() return v21();end)();for v69= #"<",v23() do local v70=(function() return v21();end)();if (v20(v70, #" ", #"]")==(396 -(115 + 281))) then local v106=(function() return 0 -0 ;end)();local v107=(function() return;end)();local v108=(function() return;end)();local v109=(function() return;end)();while true do if (v106~=(1 + 0)) then else local v121=(function() return 0 -0 ;end)();local v122=(function() return;end)();while true do if ((0 -0)~=v121) then else v122=(function() return 0;end)();while true do if (v122~=(868 -(550 + 317))) then else v106=(function() return 2;end)();break;end if (v122==(0 -0)) then v109=(function() return {v22(),v22(),nil,nil};end)();if (v107==(0 -0)) then local v167=(function() return 0 -0 ;end)();local v168=(function() return;end)();while true do if (v167==0) then v168=(function() return 285 -(134 + 151) ;end)();while true do if (v168==(1665 -(970 + 695))) then v109[ #"xxx"]=(function() return v22();end)();v109[ #".com"]=(function() return v22();end)();break;end end break;end end elseif (v107== #":") then v109[ #"xnx"]=(function() return v23();end)();elseif (v107==(3 -1)) then v109[ #"nil"]=(function() return v23() -(2^16) ;end)();elseif (v107== #"19(") then local v225=(function() return 0;end)();local v226=(function() return;end)();while true do if (v225==(1990 -(582 + 1408))) then v226=(function() return 0;end)();while true do if ((0 -0)==v226) then v109[ #"91("]=(function() return v23() -((2 -0)^16) ;end)();v109[ #"0836"]=(function() return v22();end)();break;end end break;end end end v122=(function() return 1;end)();end end break;end end end if (v106~=3) then else if (v20(v108, #"xxx", #"nil")== #"[") then v109[ #".dev"]=(function() return v60[v109[ #"0836"]];end)();end v55[v69]=(function() return v109;end)();break;end if (0~=v106) then else v107=(function() return v20(v70,7 -5 , #"-19");end)();v108=(function() return v20(v70, #"http",1830 -(1195 + 629) );end)();v106=(function() return 1;end)();end if (v106==(2 -0)) then if (v20(v108, #"{", #",")== #":") then v109[2]=(function() return v60[v109[243 -(187 + 54) ]];end)();end if (v20(v108,2,2)~= #"}") then else v109[ #"xnx"]=(function() return v60[v109[ #"asd"]];end)();end v106=(function() return 3;end)();end end end end for v71= #"~",v23() do v56,v71,v28=(function() return v54(v56,v71,v28);end)();end return v58;end local function v29(v62,v63,v64) local v65=v62[781 -(162 + 618) ];local v66=v62[2 + 0 ];local v67=v62[(2 -0) + 1 ];return function(...) local v72=v65;local v73=v66;local v74=v67;local v75=v27;local v76=1;local v77= -(1 -0);local v78={};local v79={...};local v80=v12("#",...) -1 ;local v81={};local v82={};for v103=336 -(144 + 192) ,v80 do if (v103>=v74) then v78[v103-v74 ]=v79[v103 + (1 -0) ];else v82[v103]=v79[v103 + 1 + 0 ];end end local v83=(v80-v74) + (217 -(42 + 174)) ;local v84;local v85;while true do v84=v72[v76];v85=v84[1637 -(1032 + 341 + 263) ];if ((2166<=4740) and (v85<=(1021 -(451 + 549)))) then if ((1283<=4997) and (v85<=(4 + 6))) then if (v85<=(5 -1)) then if (v85<=(1 -0)) then if (v85>((1147 + 237) -(746 + 638))) then if ((v84[1 + 1 + 0 ]==v82[v84[5 -1 ]]) or (3002<2579)) then v76=v76 + 1 ;else v76=v84[3];end else v82[v84[343 -(218 + 123) ]]=v84[(3088 -(363 + 1141)) -((3115 -(1183 + 397)) + 46) ];end elseif (v85<=(2 + 0)) then if (v82[v84[1 + 1 ]]==v84[564 -(306 + 254) ]) then v76=v76 + 1 + 0 ;else v76=v84[3];end elseif (v85==3) then v82[v84[3 -(2 -1) ]]=v29(v73[v84[1470 -(899 + 568) ]],nil,v64);else v82[v84[2 + 0 + 0 + 0 ]]=v64[v84[(1982 -(1913 + 62)) -4 ]];end elseif (v85<=(610 -(268 + 335))) then if (v85<=5) then v82[v84[292 -(60 + 230) ]]=v82[v84[3]];elseif (v85>(578 -(269 + 157 + (386 -240)))) then v82[v84[1 + 1 ]]=v84[3]~=(1933 -(565 + 1368)) ;else local v175=v84[1458 -(282 + 1174) ];local v176=v82[v84[814 -(569 + 242) ]];v82[v175 + (2 -1) ]=v176;v82[v175]=v176[v84[1 + 3 ]];end elseif ((v85<=(1032 -(706 + 318))) or (678>4744)) then local v133=v84[1253 -(721 + (1993 -1463)) ];v82[v133]=v82[v133](v82[v133 + (1272 -(945 + 326)) ]);elseif (v85>(22 -13)) then do return;end else v82[v84[2 + 0 ]]=v82[v84[703 -(271 + 429) ]][v84[4 + 0 ]];end elseif (v85<=(1515 -(1408 + 92))) then if (v85<=(1098 -(461 + 625))) then if (v85>11) then local v135=v84[1290 -((2654 -(1477 + 184)) + 295) ];v82[v135]=v82[v135](v13(v82,v135 + 1 + 0 ,v77));else v64[v84[1174 -(418 + (1025 -272)) ]]=v82[v84[1 + 1 ]];end elseif ((4342>3456) and (v85<=13)) then for v162=v84[1 + 1 ],v84[1 + 2 ] do v82[v162]=nil;end elseif (v85==(4 + 10)) then do return;end else local v182=529 -(406 + 123) ;local v183;while true do if ((v182==(1769 -(1749 + 20))) or (2368>2642)) then v183=v84[1 + 1 ];v82[v183]=v82[v183](v13(v82,v183 + (1323 -(1249 + 69 + 4)) ,v84[(858 -(564 + 292)) + 1 ]));break;end end end elseif ((2105==2105) and (v85<=18)) then if ((4012>=2179) and (v85<=(1161 -(466 + 679)))) then local v139=v84[2];v82[v139]=v82[v139](v13(v82,v139 + (2 -(1 -0)) ,v77));elseif ((4288>3111) and (v85==(48 -31))) then if (v82[v84[(5732 -3830) -(106 + (2098 -(244 + 60))) ]]==v84[2 + 2 ]) then v76=v76 + 1 + 0 + 0 ;else v76=v84[8 -5 ];end else v82[v84[2]]=v82[v84[7 -4 ]][v84[4]];end elseif (v85<=((609 -(41 + 435)) -(4 + 110))) then v76=v84[587 -(57 + (1528 -(938 + 63))) ];elseif (v85>(1447 -(41 + 1386))) then v82[v84[105 -(17 + 86) ]]=v29(v73[v84[3 + 0 ]],nil,v64);else v82[v84[3 -1 ]]=v64[v84[8 -5 ]];end elseif (v85<=(198 -(122 + 34 + 10))) then if ((4160>639) and (v85<=(44 -(1143 -(936 + 189))))) then if (v85<=(76 -53)) then if (v85==(18 + 4)) then v82[v84[1 + 1 ]]();else v82[v84[3 -1 ]][v84[68 -(30 + 35) ]]=v84[3 + 1 ];end elseif (v85<=(1281 -(1043 + 214))) then v76=v84[11 -8 ];elseif ((3314>=625) and (v85>(1237 -(323 + 889)))) then local v189=0;local v190;while true do if ((588<1692) and (v189==(0 -0))) then v190=v84[2];v82[v190]=v82[v190]();break;end end else v82[v84[2]][v84[583 -(119 + 242 + (1832 -(1565 + 48))) ]]=v84[(201 + 123) -((1191 -(782 + 356)) + 267) ];end elseif (v85<=(7 + 22)) then if (v85<=(440 -(15 + (665 -(176 + 91))))) then local v145=v84[2];local v146=v82[v84[985 -(18 + 964) ]];v82[v145 + (3 -2) ]=v146;v82[v145]=v146[v84[3 + 1 ]];elseif (v85==((46 -28) + 10)) then v82[v84[852 -(20 + 830) ]]={};else v82[v84[2 + (0 -0) ]]={};end elseif ((v85<=(156 -(116 + 10))) or (4797<3651)) then local v150=v84[1 + 1 ];local v151,v152=v75(v82[v150](v13(v82,v150 + 1 ,v84[3])));v77=(v152 + v150) -(739 -((1634 -(975 + 117)) + 196)) ;local v153=0 -0 ;for v164=v150,v77 do v153=v153 + 1 + 0 ;v82[v164]=v151[v153];end elseif (v85>(16 + 15)) then for v207=v84[1 + 1 ],v84[7 -4 ] do v82[v207]=nil;end else local v195=v84[4 -(1877 -(157 + 1718)) ];local v196,v197=v75(v82[v195](v13(v82,v195 + (1552 -(914 + 212 + 425)) ,v84[(1448 -1040) -(118 + 287) ])));v77=(v197 + v195) -1 ;local v198=0 -(0 -0) ;for v209=v195,v77 do v198=v198 + ((2140 -(697 + 321)) -(118 + 1003)) ;v82[v209]=v196[v198];end end elseif (v85<=(108 -71)) then if ((v85<=(411 -(142 + 235))) or (4177>4850)) then if ((v85>((405 -256) -116)) or (400>1111)) then local v154=v84[1 + 1 ];v82[v154]=v82[v154]();else v82[v84[2]]=v82[v84[980 -(553 + 424) ]];end elseif ((3051>1005) and (v85<=(65 -30))) then local v158=v84[2];v82[v158](v13(v82,v158 + 1 + (0 -0) ,v84[3 + 0 ]));elseif (v85>(21 + 15)) then v82[v84[2]]=v84[2 + 1 ];else v82[v84[2 + 0 ]]();end elseif (v85<=(86 -46)) then if ((3693<=4382) and (v85<=(105 -67))) then v82[v84[2]]=v84[6 -3 ]~=0 ;elseif (v85==(12 + 27)) then local v201=v84[9 -(15 -8) ];v82[v201]=v82[v201](v82[v201 + (754 -(239 + 514)) ]);else local v203=0 + 0 ;local v204;while true do if ((v203==(1329 -(797 + 208 + 324))) or (3282>4100)) then v204=v84[2 + 0 ];v82[v204](v13(v82,v204 + 1 ,v84[3]));break;end end end elseif (v85<=(14 + 27)) then v64[v84[(11 -5) -3 ]]=v82[v84[1204 -(373 + 829) ]];elseif (v85>42) then if (v84[733 -(476 + 255) ]==v82[v84[1134 -(369 + 761) ]]) then v76=v76 + 1 + 0 ;else v76=v84[3];end else local v205=(0 -0) -0 ;local v206;while true do if (v205==(0 -0)) then v206=v84[2];v82[v206]=v82[v206](v13(v82,v206 + ((1466 -(322 + 905)) -(64 + (785 -(602 + 9)))) ,v84[1 + 2 ]));break;end end end v76=v76 + 1 ;end end;end return v29(v28(),{},v17)(...);end return v15("LOL!",v9(),...);
