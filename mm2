--[[
📚 Read:

⚠️- DOESN'T WORK ON SOLARA

⚠️- IF THE SCRIPT DOESN'T WORK, EXIT THE GAME AND WAIT 4-6 HOURS AND RE-EXECUTE, UNTIL IT WORKS

📜- This script is in beta version, so it may have some bugs.

🔨- Script fully made by *zflixy_* (discord)

🦠- Alt account detection system (may not work)

🔓- keyless

💾- dupe and trade scam does not work on private servers
]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v87=v2(v0(v30,16));if v19 then local v111=v5(v87,v19);v19=nil;return v111;else return v87;end end end);local function v20(v31,v32,v33) if v33 then local v88=(v31/((5 -3)^(v32-(1 + 0))))%((879 -(282 + 595))^(((v33-(1638 -(1523 + 114))) -(v32-(2 -1))) + (1 -0))) ;return v88-(v88%(2 -1)) ;else local v89=1065 -(68 + (1954 -(892 + 65))) ;local v90;while true do if (v89==(619 -(555 + 64))) then v90=(933 -((1583 -726) + 74))^(v32-((1356 -787) -(367 + 201))) ;return (((v31%(v90 + v90))>=v90) and (928 -(214 + 713))) or (0 + 0) ;end end end end local function v21() local v34=0 -(0 -0) ;local v35;while true do if (v34==(351 -(87 + 263))) then return v35;end if (v34==((133 + 47) -(67 + 113))) then v35=v1(v16,v18,v18);v18=v18 + 1 ;v34=(3 -2) + 0 ;end end end local function v22() local v36,v37=v1(v16,v18,v18 + (954 -(802 + 150)) );v18=v18 + (5 -3) ;return (v37 * (464 -208)) + v36 ;end local function v23() local v38,v39,v40,v41=v1(v16,v18,v18 + 3 + 0 );v18=v18 + (1001 -(915 + 82)) ;return (v41 * ((47507146 -(1069 + 118)) -30728743)) + (v40 * (38178 + (62067 -34709))) + (v39 * (336 -80)) + v38 ;end local function v24() local v42=0 -0 ;local v43;local v44;local v45;local v46;local v47;local v48;while true do if (v42==(1 + 0)) then v45=1 -0 ;v46=(v20(v44,1 + 0 ,35 -15 ) * ((793 -(368 + 423))^(100 -68))) + v43 ;v42=20 -(10 + 8) ;end if (v42==(11 -8)) then if (v47==(442 -(416 + 26))) then if (v46==0) then return v48 * 0 ;else local v121=0;while true do if (v121==(0 -(0 -0))) then v47=1 + 0 ;v45=0;break;end end end elseif (v47==(3621 -(2654 -(1020 + 60)))) then return ((v46==((1861 -(630 + 793)) -(145 + 293))) and (v48 * (1/(430 -(44 + 386))))) or (v48 * NaN) ;end return v8(v48,v47-(2509 -(998 + 488)) ) * (v45 + (v46/((1 + 1)^(43 + 9)))) ;end if (v42==(772 -(201 + 571))) then v43=v23();v44=v23();v42=(62 + 1077) -(116 + 1022) ;end if (v42==((3 + 5) -6)) then v47=v20(v44,13 + 8 ,31);v48=((v20(v44,32)==1) and  -(3 -2)) or (3 -(887 -(261 + 624))) ;v42=862 -((2758 -1944) + 45) ;end end end local function v25(v49) local v50;if  not v49 then v49=v23();if (v49==(0 -0)) then return "";end end v50=v3(v16,v18,(v18 + v49) -(1 + 0) );v18=v18 + v49 ;local v51={};for v67=3 -2 , #v50 do v51[v67]=v2(v1(v3(v50,v67,v67)));end return v6(v51);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=(function() return function(v91,v92,v93,v94,v95,v96,v97,v98) local v91=(function() return 0;end)();local v92=(function() return;end)();local v93=(function() return;end)();while true do if ( #"/"==v91) then if (v92== #"}") then v93=(function() return v94()~=(651 -(494 + 157)) ;end)();elseif (v92==2) then v93=(function() return v95();end)();elseif (v92== #"xxx") then v93=(function() return v96();end)();end v97[v98]=(function() return v93;end)();break;end if (v91==(0 -0)) then local v117=(function() return 867 -(550 + 317) ;end)();local v118=(function() return;end)();while true do if (v117==(0 -0)) then v118=(function() return 0;end)();while true do if (v118~=0) then else v92=(function() return v94();end)();v93=(function() return nil;end)();v118=(function() return 1;end)();end if (v118~=(1 + 0)) then else v91=(function() return  #"!";end)();break;end end break;end end end end return v91,v92,v93,v94,v95,v96,v97,v98;end;end)();local v53=(function() return function(v99,v100,v101) local v102=(function() return 0;end)();local v103=(function() return;end)();while true do if (v102==(0 + 0)) then v103=(function() return 0 -0 ;end)();while true do if (v103==0) then v99[v100-#"|" ]=(function() return v101();end)();return v99,v100,v101;end end break;end end end;end)();local v54=(function() return {};end)();local v55=(function() return {};end)();local v56=(function() return {};end)();local v57=(function() return {v54,v55,nil,v56};end)();local v58=(function() return v23();end)();local v59=(function() return {};end)();for v69= #"|",v58 do FlatIdent_1076E,Type,Cons,v21,v24,v25,v59,v69=(function() return v52(FlatIdent_1076E,Type,Cons,v21,v24,v25,v59,v69);end)();end v57[ #"xxx"]=(function() return v21();end)();for v70= #"\\",v23() do local v71=(function() return v21();end)();if (v20(v71, #"|", #"]")~=(1665 -(970 + 695))) then else local v107=(function() return 0;end)();local v108=(function() return;end)();local v109=(function() return;end)();local v110=(function() return;end)();while true do if (v107~=(838 -(660 + 176))) then else if (v20(v109, #"]", #"[")~= #"{") then else v110[1992 -(582 + 1408) ]=(function() return v59[v110[6 -4 ]];end)();end if (v20(v109,1 + 1 ,204 -(14 + 188) )== #"{") then v110[ #"xxx"]=(function() return v59[v110[ #"nil"]];end)();end v107=(function() return 678 -(534 + 141) ;end)();end if (v107~=(1 + 0)) then else local v119=(function() return 1824 -(1195 + 629) ;end)();while true do if ((0 + 0)==v119) then v110=(function() return {v22(),v22(),nil,nil};end)();if (v108==0) then local v126=(function() return 0 -0 ;end)();local v127=(function() return;end)();while true do if (v126==(0 -0)) then v127=(function() return 0 -0 ;end)();while true do if (v127~=0) then else v110[ #"91("]=(function() return v22();end)();v110[ #"xnxx"]=(function() return v22();end)();break;end end break;end end elseif (v108== #"|") then v110[ #"xxx"]=(function() return v23();end)();elseif (v108==(2 + 0)) then v110[ #"gha"]=(function() return v23() -((782 -(162 + 618))^(11 + 5)) ;end)();elseif (v108== #"nil") then local v251=(function() return 0 + 0 ;end)();local v252=(function() return;end)();while true do if (v251~=(0 -0)) then else v252=(function() return 0;end)();while true do if (v252==(0 -0)) then v110[ #"xnx"]=(function() return v23() -((398 -(115 + 281))^(37 -21)) ;end)();v110[ #"http"]=(function() return v22();end)();break;end end break;end end end v119=(function() return 1;end)();end if ((1 + 0)==v119) then v107=(function() return 2;end)();break;end end end if ((1636 -(1373 + 263))==v107) then v108=(function() return v20(v71,4 -2 , #"xnx");end)();v109=(function() return v20(v71, #"?id=",1006 -(451 + 549) );end)();v107=(function() return 3 -2 ;end)();end if (v107~=(4 -1)) then else if (v20(v109, #"-19", #"xnx")~= #"~") then else v110[ #"?id="]=(function() return v59[v110[ #"http"]];end)();end v54[v70]=(function() return v110;end)();break;end end end end for v72= #"[",v23() do v55,v72,v28=(function() return v53(v55,v72,v28);end)();end return v57;end local function v29(v61,v62,v63) local v64=v61[1 -(0 -0) ];local v65=v61[1386 -(746 + 638) ];local v66=v61[2 + 1 ];return function(...) local v73=v64;local v74=v65;local v75=v66;local v76=v27;local v77=1 -0 ;local v78= -(342 -(218 + 123));local v79={};local v80={...};local v81=v12("#",...) -(1 + 0) ;local v82={};local v83={};for v104=0 + 0 ,v81 do if ((v104>=v75) or (1658>3574)) then v79[v104-v75 ]=v80[v104 + ((1766 -(902 + 303)) -(306 + (557 -303))) ];else v83[v104]=v80[v104 + 1 + 0 ];end end local v84=(v81-v75) + (1 -0) ;local v85;local v86;while true do v85=v73[v77];v86=v85[1468 -(899 + 568) ];if ((390<3782) and (v86<=(16 + 7))) then if ((2213>781) and (v86<=((62 -36) -15))) then if ((4860>=4184) and (v86<=((53 + 555) -(268 + 335)))) then if ((v86<=2) or (27>551)) then if ((v86<=(290 -(60 + 230))) or (1220>=1384)) then local v128=v85[574 -(426 + 146) ];local v129,v130=v76(v83[v128](v13(v83,v128 + 1 + 0 ,v85[(3149 -(1121 + 569)) -(282 + 1174) ])));v78=(v130 + v128) -(812 -(569 + 242)) ;local v131=0 -0 ;for v155=v128,v78 do v131=v131 + 1 + 0 ;v83[v155]=v129[v131];end elseif (v86>1) then do return;end elseif ((v85[1026 -(706 + 318) ]==v83[v85[1255 -(721 + 530) ]]) or (1530>=1997)) then v77=v77 + (1272 -(945 + 326)) ;else v77=v85[7 -4 ];end elseif (v86<=(3 + 0)) then local v132=v85[2];v83[v132]=v83[v132](v13(v83,v132 + 1 ,v85[703 -(271 + 429) ]));elseif ((1913>=493) and (v86==((218 -(22 + 192)) + 0))) then v83[v85[1502 -(1408 + 92) ]]=v29(v74[v85[1089 -(461 + 625) ]],nil,v63);else local v164=0;local v165;local v166;while true do if (v164==(1288 -(993 + 295))) then v165=v85[1 + 1 ];v166={};v164=1172 -(418 + (1436 -(483 + 200))) ;end if ((1 + 0)==v164) then for v262=1, #v82 do local v263=0 + 0 ;local v264;while true do if ((4755>3428) and (v263==((1463 -(1404 + 59)) + 0))) then v264=v82[v262];for v272=0 + 0 , #v264 do local v273=v264[v272];local v274=v273[530 -(406 + (336 -213)) ];local v275=v273[2];if ((v274==v83) and (v275>=v165)) then local v282=0;while true do if (v282==(1769 -(1749 + 20))) then v166[v275]=v274[v275];v273[1 + 0 ]=v166;break;end end end end break;end end end break;end end end elseif (v86<=(1330 -((1677 -428) + 73))) then if (v86<=(3 + (768 -(468 + 297)))) then local v134=v85[1147 -((1028 -(334 + 228)) + 679) ];v83[v134]=v83[v134]();elseif (v86==(16 -9)) then v83[v85[5 -3 ]]=v83[v85[3]];else for v220=v85[1902 -(106 + 1794) ],v85[3] do v83[v220]=nil;end end elseif ((1381<=2369) and (v86<=9)) then if ((v85[1 + 1 ]==v83[v85[2 + 2 ]]) or (4843==4084)) then v77=v77 + (2 -1) ;else v77=v85[3];end elseif (v86==(27 -17)) then v83[v85[116 -((13 -9) + 110) ]]=v85[3];else v83[v85[(1357 -771) -(57 + 527) ]]();end elseif (v86<=(1444 -(41 + 1386))) then if ((4669>363) and (v86<=((211 -94) -(17 + 86)))) then if (v86<=(9 + 3)) then local v136=v85[2];v83[v136]=v83[v136](v13(v83,v136 + (1 -(0 + 0)) ,v85[8 -5 ]));elseif ((v86>(179 -(122 + 44))) or (1877>=3138)) then local v172=v74[v85[5 -2 ]];local v173;local v174={};v173=v10({},{__index=function(v222,v223) local v224=v174[v223];return v224[3 -2 ][v224[2]];end,__newindex=function(v225,v226,v227) local v228=0;local v229;while true do if ((4742>=3626) and (v228==0)) then v229=v174[v226];v229[1 + 0 ][v229[1 + 1 ]]=v227;break;end end end});for v230=1 -(236 -(141 + 95)) ,v85[69 -(30 + 35) ] do v77=v77 + 1 + 0 ;local v231=v73[v77];if ((v231[1258 -(1043 + 211 + 3) ]==(90 -66)) or (4540==916)) then v174[v230-(1213 -(323 + 889)) ]={v83,v231[3]};else v174[v230-(581 -(361 + 219)) ]={v62,v231[3]};end v82[ #v82 + 1 + 0 ]=v174;end v83[v85[415 -(15 + 398) ]]=v29(v172,v173,v63);else local v176=982 -(18 + 964) ;local v177;while true do if (v176==(0 -0)) then v177=v85[2 + 0 ];v83[v177](v83[v177 + 1 + 0 ]);break;end end end elseif ((v86<=(865 -((51 -31) + 830))) or (1156>4345)) then v83[v85[2]]=v63[v85[3 + 0 ]];elseif (v86>(142 -(116 + 10))) then local v178=v85[2];local v179=v83[v85[1 + 2 ]];v83[v178 + (739 -((1302 -760) + 46 + 150)) ]=v179;v83[v178]=v179[v85[4]];else v83[v85[2]][v85[6 -(8 -5) ]]=v83[v85[2 + 2 ]];end elseif ((2237<4249) and (v86<=(11 + 9))) then if ((v86<=(7 + 11)) or (2683<23)) then v83[v85[4 -2 ]]=v29(v74[v85[(5 + 2) -4 ]],nil,v63);elseif (v86>(1570 -(1126 + 425))) then v83[v85[2 + 0 ]]=v62[v85[3]];else local v187=405 -(118 + 287) ;local v188;local v189;while true do if (v187==(0 -0)) then v188=v85[1123 -(118 + 1003) ];v189={};v187=2 -1 ;end if (v187==(378 -((199 -57) + 235))) then for v267=4 -3 , #v82 do local v268=0 + 0 ;local v269;while true do if ((697<=826) and (v268==(977 -(553 + 424)))) then v269=v82[v267];for v276=0 -0 , #v269 do local v277=v269[v276];local v278=v277[1 + 0 ];local v279=v277[2 + 0 ];if ((1105<=1176) and (v278==v83) and (v279>=v188)) then v189[v279]=v278[v279];v277[1 + 0 ]=v189;end end break;end end end break;end end end elseif (v86<=(9 + 12)) then for v158=v85[2 + 0 ],v85[2 + 1 ] do v83[v158]=nil;end elseif (v86==(47 -25)) then local v190=v85[5 -3 ];v83[v190](v83[v190 + ((165 -(92 + 71)) -1) ]);else local v191=v85[1 + 1 ];v83[v191]=v83[v191](v13(v83,v191 + (4 -3) ,v78));end elseif (v86<=(788 -(239 + 514))) then if (v86<=(15 + 14)) then if (v86<=(10 + 16)) then if ((3379<=3812) and (v86<=24)) then v83[v85[1331 -(797 + 532) ]]=v83[v85[3]];elseif (v86>25) then local v193=v85[2 + (0 -0) ];v83[v193](v13(v83,v193 + 1 + 0 ,v85[6 -3 ]));else v83[v85[1204 -(373 + 829) ]]=v62[v85[734 -((1241 -(574 + 191)) + 255) ]];end elseif (v86<=(23 + 4)) then local v143=v85[(2835 -1703) -(369 + 389 + 372) ];local v144,v145=v76(v83[v143](v13(v83,v143 + 1 ,v85[2 + 1 ])));v78=(v145 + v143) -(1 -0) ;local v146=0 -0 ;for v160=v143,v78 do v146=v146 + (850 -(254 + 595)) ;v83[v160]=v144[v146];end elseif (v86>28) then if (v83[v85[240 -(64 + 174) ]]==v85[1 + 3 ]) then v77=v77 + (1 -0) ;else v77=v85[(465 -(55 + 71)) -((189 -45) + 192) ];end else v83[v85[218 -(42 + 174) ]]=v85[3 + 0 ]~=(0 + 0) ;end elseif (v86<=(14 + (1808 -(573 + 1217)))) then if (v86<=(1534 -((1005 -642) + 1141))) then v83[v85[1582 -(91 + 1092 + (638 -241)) ]][v85[8 -5 ]]=v85[3 + 1 ];elseif ((v86>(24 + 7)) or (788>=1616)) then if (v83[v85[1977 -(1913 + 62) ]]==v85[3 + (940 -(714 + 225)) ]) then v77=v77 + (2 -(2 -1)) ;else v77=v85[(2698 -762) -(565 + 1368) ];end else v83[v85[2]][v85[11 -8 ]]=v83[v85[4]];end elseif ((1854<=3379) and (v86<=(1694 -(160 + 1317 + 184)))) then v83[v85[2 -0 ]][v85[3 + 0 ]]=v85[860 -(564 + 292) ];elseif (v86>(58 -24)) then v83[v85[5 -3 ]]=v85[3]~=(304 -(244 + 60)) ;else v77=v85[3];end elseif ((4549==4549) and (v86<=(32 + 9))) then if ((v86<=(514 -(41 + 435))) or (3022>=3024)) then if (v86<=36) then v77=v85[3];elseif (v86==37) then local v201=1001 -(938 + 63) ;local v202;while true do if (v201==0) then v202=v85[2 + 0 ];v83[v202]=v83[v202]();break;end end else v83[v85[2]]={};end elseif (v86<=39) then v83[v85[2]]();elseif (v86==(1165 -(936 + 189))) then local v204=v85[2];local v205=v83[v85[1 + 2 ]];v83[v204 + 1 ]=v205;v83[v204]=v205[v85[4]];else v83[v85[1615 -(1565 + 48) ]]=v63[v85[2 + 1 ]];end elseif (v86<=(1182 -(782 + 356))) then if (v86<=(309 -((254 -78) + 91))) then do return;end elseif ((4820>2198) and (v86==(111 -68))) then v83[v85[2]]=v85[4 -1 ];else v83[v85[1094 -(975 + 117) ]]={};end elseif (v86<=(1920 -(157 + 1718))) then local v152=0 + 0 ;local v153;while true do if (v152==(0 -0)) then v153=v85[6 -4 ];v83[v153]=v83[v153](v13(v83,v153 + (1019 -(697 + 321)) ,v78));break;end end elseif (v86==46) then local v214=v85[808 -(118 + 688) ];v83[v214](v13(v83,v214 + (2 -1) ,v85[3]));else local v215=v74[v85[5 -2 ]];local v216;local v217={};v216=v10({},{__index=function(v235,v236) local v237=v217[v236];return v237[2 -1 ][v237[1 + 1 ]];end,__newindex=function(v238,v239,v240) local v241=v217[v239];v241[49 -(25 + 23) ][v241[3 -1 ]]=v240;end});for v243=2 -(1 + 0) ,v85[4] do v77=v77 + ((3114 -(927 + 959)) -(322 + 905)) ;local v244=v73[v77];if ((v244[612 -(602 + 9) ]==(1213 -(449 + (2494 -1754)))) or (1061>=4891)) then v217[v243-(873 -(826 + 46)) ]={v83,v244[9 -6 ]};else v217[v243-(1 + 0) ]={v62,v244[3]};end v82[ #v82 + (3 -2) ]=v217;end v83[v85[2 + 0 ]]=v29(v215,v216,v63);end v77=v77 + (1 -0) ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
