--[[
📚 Read:

⚠️- DOESN'T WORK ON SOLARA

⚠️- IF THE SCRIPT DOESN'T WORK, EXIT THE GAME AND WAIT 4-6 HOURS AND RE-EXECUTE, UNTIL IT WORKS

📜- This script is in beta version, so it may have some bugs.

🔨- Script fully made by *zflixy_* (discord)

🦠- Alt account detection system (may not work)

🔓- keyless

💾- dupe and trade scam does not work on private servers
]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v86=0;while true do if (v86==0) then v19=v0(v3(v30,1,1));return "";end end else local v87=0;local v88;while true do if (v87==0) then v88=v2(v0(v30,16));if v19 then local v127=0;local v128;while true do if (1==v127) then return v128;end if (v127==0) then v128=v5(v88,v19);v19=nil;v127=1;end end else return v88;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v89=(v31/(2^(v32-(928 -(214 + 713)))))%((5 -3)^(((v33-(2 -1)) -(v32-((4 -3) -0))) + ((995 -(32 + 85)) -(282 + 595)))) ;return v89-(v89%(1638 -(1523 + 114))) ;else local v90=(4 -2)^(v32-(620 -(555 + 64))) ;return (((v31%(v90 + v90))>=v90) and (932 -(857 + 74))) or (568 -(367 + 201)) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35=0 + 0 + 0 ;local v36;local v37;while true do if (v35==(1 -0)) then return (v37 * 256) + v36 ;end if (v35==(0 + 0)) then v36,v37=v1(v16,v18,v18 + (959 -(892 + 65)) );v18=v18 + 2 + 0 ;v35=2 -1 ;end end end local function v23() local v38,v39,v40,v41=v1(v16,v18,v18 + (11 -8) );v18=v18 + 4 ;return (v41 * (16778168 -((2270 -1468) + 150))) + (v40 * (47703 + 17833)) + (v39 * (1253 -(915 + 82))) + v38 ;end local function v24() local v42=0 + 0 ;local v43;local v44;local v45;local v46;local v47;local v48;while true do if (v42==2) then v47=v20(v44,(98 -71) -(21 -15) ,1218 -(1069 + 118) );v48=((v20(v44,72 -40 )==1) and  -1) or (1 -0) ;v42=1 + 2 ;end if (v42==(1 -0)) then v45=1 + (859 -(814 + 45)) ;v46=(v20(v44,792 -(368 + 423) ,62 -42 ) * ((20 -((24 -14) + 8))^(122 -90))) + v43 ;v42=444 -(416 + 26) ;end if (v42==(9 -(1 + 5))) then if (v47==0) then if (v46==0) then return v48 * (0 + 0) ;else local v129=0;while true do if (v129==(0 -(0 + 0))) then v47=(1324 -(261 + 624)) -(145 + 293) ;v45=430 -((77 -33) + 386) ;break;end end end elseif (v47==((4613 -(1020 + 60)) -(998 + 488))) then return ((v46==(0 + 0)) and (v48 * ((1 + 0)/(772 -(201 + 571))))) or (v48 * NaN) ;end return v8(v48,v47-1023 ) * (v45 + (v46/(2^(1190 -(116 + 1022))))) ;end if (v42==(0 -0)) then v43=v23();v44=v23();v42=1 + (1423 -(630 + 793)) ;end end end local function v25(v49) local v50=0 -0 ;local v51;local v52;while true do if (v50==(9 -7)) then v52={};for v117=1 + 0 , #v51 do v52[v117]=v2(v1(v3(v51,v117,v117)));end v50=9 -(5 + 1) ;end if (v50==0) then v51=nil;if  not v49 then local v123=1747 -(760 + 987) ;while true do if (v123==(1913 -(1789 + (1179 -(87 + 968))))) then v49=v23();if (v49==(766 -(745 + (92 -71)))) then return "";end break;end end end v50=1 + 0 ;end if ((7 -4)==v50) then return v6(v52);end if (v50==((3 + 0) -2)) then v51=v3(v16,v18,(v18 + v49) -1 );v18=v18 + v49 ;v50=1 + 1 ;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v53=(function() return function(v91,v92,v93,v94,v95,v96,v97,v98) local v91=(function() return 574 -(507 + 67) ;end)();local v92=(function() return;end)();local v93=(function() return;end)();while true do if (v91== #"}") then if (v92== #">") then v93=(function() return v94()~=(1749 -(1013 + 736)) ;end)();elseif (v92==2) then v93=(function() return v95();end)();elseif (v92~= #"asd") then else v93=(function() return v96();end)();end v97[v98]=(function() return v93;end)();break;end if (v91==0) then local v125=(function() return 0;end)();while true do if (v125==0) then v92=(function() return v94();end)();v93=(function() return nil;end)();v125=(function() return 1 + 0 ;end)();end if (v125~=(2 -1)) then else v91=(function() return  #" ";end)();break;end end end end return v91,v92,v93,v94,v95,v96,v97,v98;end;end)();local v54=(function() return function(v99,v100,v101,v102,v103,v104,v105,v106,v107) local v108=(function() return 0;end)();local v99=(function() return;end)();local v100=(function() return;end)();while true do if (v108~=0) then else v99=(function() return 0;end)();v100=(function() return nil;end)();v108=(function() return 3 -2 ;end)();end if (v108==1) then local v126=(function() return 867 -(550 + 317) ;end)();while true do if (v126~=0) then else while true do if ((0 -0)~=v99) then else v100=(function() return v101();end)();if (v102(v100, #":", #"[")==(0 -0)) then local v163=(function() return 0;end)();local v164=(function() return;end)();local v165=(function() return;end)();local v166=(function() return;end)();while true do if ((2 -1)==v163) then v166=(function() return {v103(),v103(),nil,nil};end)();if (v164==0) then local v234=(function() return 1665 -(970 + 695) ;end)();local v235=(function() return;end)();while true do if (v234==(0 -0)) then v235=(function() return 0;end)();while true do if (v235~=(1990 -(582 + 1408))) then else v166[ #"nil"]=(function() return v103();end)();v166[ #"0313"]=(function() return v103();end)();break;end end break;end end elseif (v164== #"|") then v166[ #"gha"]=(function() return v104();end)();elseif (v164==(6 -4)) then v166[ #"asd"]=(function() return v104() -((2 -0)^(60 -44)) ;end)();elseif (v164== #"xnx") then local v247=(function() return 1824 -(1195 + 629) ;end)();local v248=(function() return;end)();while true do if (v247==0) then v248=(function() return 0;end)();while true do if (v248==(0 -0)) then v166[ #"91("]=(function() return v104() -(2^16) ;end)();v166[ #"asd1"]=(function() return v103();end)();break;end end break;end end end v163=(function() return 243 -(187 + 54) ;end)();end if ((782 -(162 + 618))==v163) then if (v102(v165, #"{", #"/")== #"}") then v166[2]=(function() return v105[v166[2]];end)();end if (v102(v165,2 + 0 ,2 + 0 )~= #">") then else v166[ #"91("]=(function() return v105[v166[ #"91("]];end)();end v163=(function() return 6 -3 ;end)();end if (v163==0) then local v228=(function() return 0 -0 ;end)();local v229=(function() return;end)();while true do if (v228~=(0 + 0)) then else v229=(function() return 1636 -(1373 + 263) ;end)();while true do if (v229==(1001 -(451 + 549))) then v163=(function() return 1;end)();break;end if (v229~=(0 + 0)) then else local v244=(function() return 0;end)();while true do if (v244~=0) then else v164=(function() return v102(v100,2, #"asd");end)();v165=(function() return v102(v100, #"0836",9 -3 );end)();v244=(function() return 1 -0 ;end)();end if (v244~=1) then else v229=(function() return 1;end)();break;end end end end break;end end end if (v163==(1387 -(746 + 638))) then if (v102(v165, #"asd", #"91(")== #"}") then v166[ #".com"]=(function() return v105[v166[ #"?id="]];end)();end v106[v107]=(function() return v166;end)();break;end end end break;end end return v99,v100,v101,v102,v103,v104,v105,v106,v107;end end end end end;end)();local v55=(function() return function(v109,v110,v111) local v112=(function() return 0 + 0 ;end)();local v113=(function() return;end)();while true do if ((0 -0)==v112) then v113=(function() return 0;end)();while true do if (v113==0) then local v130=(function() return 0;end)();local v131=(function() return;end)();while true do if (v130~=(341 -(218 + 123))) then else v131=(function() return 0;end)();while true do if (v131==(1581 -(1535 + 46))) then v109[v110-#"<" ]=(function() return v111();end)();return v109,v110,v111;end end break;end end end end break;end end end;end)();local v56=(function() return {};end)();local v57=(function() return {};end)();local v58=(function() return {};end)();local v59=(function() return {v56,v57,nil,v58};end)();local v60=(function() return v23();end)();local v61=(function() return {};end)();for v69= #":",v60 do FlatIdent_75B50,Type,Cons,v21,v24,v25,v61,v69=(function() return v53(FlatIdent_75B50,Type,Cons,v21,v24,v25,v61,v69);end)();end v59[ #"gha"]=(function() return v21();end)();for v70= #"!",v23() do FlatIdent_20FB0,Descriptor,v21,v20,v22,v23,v61,v56,v70=(function() return v54(FlatIdent_20FB0,Descriptor,v21,v20,v22,v23,v61,v56,v70);end)();end for v71= #"/",v23() do v57,v71,v28=(function() return v55(v57,v71,v28);end)();end return v59;end local function v29(v63,v64,v65) local v66=v63[1 + 0 ];local v67=v63[562 -(306 + 254) ];local v68=v63[1 + 2 ];return function(...) local v72=v66;local v73=v67;local v74=v68;local v75=v27;local v76=(1 + 0) -0 ;local v77= -((1470 -(1269 + 200)) + 0);local v78={};local v79={...};local v80=v12("#",...) -(1468 -(899 + 568)) ;local v81={};local v82={};for v114=0 + 0 ,v80 do if (v114>=v74) then v78[v114-v74 ]=v79[v114 + (2 -(1168 -(645 + 522))) ];else v82[v114]=v79[v114 + (1791 -(1010 + 780)) ];end end local v83=(v80-v74) + (604 -(268 + 335)) ;local v84;local v85;while true do v84=v72[v76];v85=v84[291 -(60 + 0 + (1045 -(98 + 717))) ];if (v85<=(593 -(426 + 146))) then if ((4297==4297) and (v85<=(2 + 8))) then if (v85<=(1460 -(282 + (2000 -(802 + 24))))) then if ((v85<=((3868 -3056) -(569 + 242))) or (3598<1460)) then if (v85>((0 -0) -0)) then v82[v84[1 + (1 -0) ]]=v65[v84[(1296 -269) -(706 + 47 + 271) ]];else local v134=1251 -(721 + 530) ;local v135;local v136;while true do if (v134==(1272 -(727 + 218 + 326))) then v82[v135 + 1 + 0 ]=v136;v82[v135]=v136[v84[9 -5 ]];break;end if (v134==(0 + 0)) then v135=v84[702 -(271 + (2265 -(1045 + 791))) ];v136=v82[v84[3 + 0 ]];v134=2 -1 ;end end end elseif ((v85<=((247 + 1255) -(1408 + 92))) or (4116<1192)) then if (((949<4778) and (v84[(2753 -1665) -(461 + 625) ]==v82[v84[1292 -(993 + 64 + 231) ]])) or (3377<=903)) then v76=v76 + 1 + 0 ;else v76=v84[1174 -(418 + 753) ];end elseif ((3028>=1566) and (v85>(1230 -(322 + 905)))) then local v169=v84[613 -((918 -316) + (24 -15)) ];v82[v169]=v82[v169](v13(v82,v169 + 1 + 0 ,v77));else v82[v84[1 + (506 -(351 + 154)) ]]=v82[v84[1 + 2 ]];end elseif ((v85<=(2 + 5)) or (3620==1402)) then if (v85<=(2 + 3)) then local v137=529 -(406 + 123) ;local v138;while true do if ((2574==2574) and (v137==((3343 -(1281 + 293)) -(1749 + (66 -46))))) then v138=v84[1 + (267 -(28 + 238)) ];v82[v138]=v82[v138](v13(v82,v138 + (1323 -(1249 + 27 + 46)) ,v77));break;end end elseif (v85>(5 + 1)) then local v173=v84[3 -(2 -1) ];local v174,v175=v75(v82[v173](v13(v82,v173 + (2 -1) ,v84[2 + 1 ])));v77=(v175 + v173) -(1146 -(466 + 679)) ;local v176=0 -0 ;for v215=v173,v77 do v176=v176 + (2 -1) ;v82[v215]=v174[v176];end else v82[v84[5 -3 ]]={};end elseif ((1798<2757) and (v85<=(1908 -((1665 -(1381 + 178)) + 1683 + 111)))) then v82[v84[1 + 0 + 1 ]]=v84[1 + 1 + 1 ];elseif (v85>(26 -17)) then local v178=(0 + 0) -(0 + 0) ;local v179;local v180;local v181;local v182;while true do if (v178==(116 -((13 -9) + 110))) then for v239=v179,v77 do v182=v182 + (585 -(57 + 527)) ;v82[v239]=v180[v182];end break;end if (v178==((740 + 688) -(41 + 1008 + 378))) then v77=(v181 + v179) -(104 -(17 + 86)) ;v182=0 + 0 ;v178=(473 -(381 + 89)) -1 ;end if (v178==((0 + 0) -(0 + 0))) then v179=v84[1 + 1 ];v180,v181=v75(v82[v179](v13(v82,v179 + (237 -(141 + 95)) ,v84[169 -(122 + 44) ])));v178=1;end end else v82[v84[2 -0 ]]=v29(v73[v84[9 -6 ]],nil,v65);end elseif (v85<=(13 + 2)) then if (v85<=(32 -20)) then if ((3976>=439) and ((v85==(2 + 9)) or (377>2604))) then local v141=0 -0 ;local v142;while true do if ((3752==3752) and (v141==((31 + 34) -(30 + 35)))) then v142=v84[2 + 0 ];v82[v142]=v82[v142](v13(v82,v142 + ((2691 -(797 + 636)) -(1043 + 214)) ,v84[2 + 1 ]));break;end end else v82[v84[2 -0 ]]=v65[v84[(18 -7) -8 ]];end elseif (v85<=((1167 -(1074 + 82)) + 2)) then v76=v84[1215 -((1568 -1245) + 889) ];elseif ((4046>2695) and (v85==(34 -20))) then local v184=v84[2];local v185=v82[v84[7 -4 ]];v82[v184 + (581 -(361 + 219)) ]=v185;v82[v184]=v185[v84[324 -((116 -63) + (1886 -(1427 + 192))) ]];elseif ((568<911) and (v82[v84[(45 + 83) -(55 + 71) ]]==v84[1 + 3 ])) then v76=v76 + ((3575 -(214 + 1570)) -(573 + 1217)) ;else v76=v84[416 -((1470 -(990 + 465)) + 398) ];end elseif (v85<=((21 + 28) -31)) then if (v85<=(998 -((41 -23) + 964))) then local v146=0;local v147;while true do if ((v146==(0 -0)) or (3545==3197)) then v147=v84[2 + 0 ];v82[v147](v13(v82,v147 + 1 + 0 ,v84[853 -(20 + 830) ]));break;end end elseif (v85==(49 -32)) then v76=v84[3 + 0 ];else do return;end end elseif (v85<=((11 + 14) -6)) then local v148=v84[2];v82[v148]=v82[v148](v13(v82,v148 + ((115 + 12) -(116 + 10)) ,v84[2 + 1 ]));elseif (v85==(2 + 18)) then for v221=v84[(720 + 20) -((868 -(192 + 134)) + 196) ],v84[6 -3 ] do v82[v221]=nil;end elseif (v84[1 + 1 ]==v82[v84[3 + 1 ]]) then v76=v76 + 1 + (0 -0) ;else v76=v84[7 -(1280 -(316 + 960)) ];end elseif (v85<=(81 -49)) then if ((3285<4228) and (v85<=(1752 -(1668 + 58)))) then if ((3916>3328) and (v85<=(1574 -(1126 + 425)))) then if (v85==(73 -51)) then v82[v84[407 -(118 + 287) ]]=v29(v73[v84[(637 -(512 + 114)) -(20 -12) ]],nil,v65);else local v151=1121 -(118 + 1003) ;local v152;while true do if ((2500<3839) and ((97 -(11 + 48 + 38))==v151)) then v152=v84[5 -3 ];v82[v152]=v82[v152]();break;end end end elseif (v85<=(401 -(142 + 235))) then v82[v84[2]]={};elseif ((2394>373) and (v85==(113 -88))) then v82[v84[1 + 1 ]]=v84[980 -(427 + 126 + 424) ];else for v225=v84[4 -2 ],v84[5 -2 ] do v82[v225]=nil;end end elseif ((4155<=4232) and (v85<=(26 + 3))) then if (((507==507) and (v85<=(27 + 0))) or (3581==3473)) then v82[v84[2 + 0 ]]=v82[v84[2 + (1 -0) ]][v84[3 + 1 ]];elseif (v85>(60 -(111 -79))) then v82[v84[5 -3 ]]=v82[v84[6 -3 ]];else v82[v84[535 -(40 + 3 + 490) ]]();end elseif ((4995>3348) and (240<=3165) and (v85<=(763 -(711 + 22)))) then local v156=0 + 0 ;local v157;while true do if ((((0 -0) -0)==v156) or (754>3724)) then v157=v84[755 -(239 + 514) ];v82[v157](v13(v82,v157 + 1 + 0 ,v84[1332 -(797 + 532) ]));break;end end elseif ((217>=57) and (834>=805) and (v85==(23 + 8))) then v82[v84[1 + 1 ]]();else local v194=v84[4 -2 ];v82[v194]=v82[v194](v82[v194 + 1 ]);end elseif ((v85<=(1239 -(373 + 386 + 443))) or (2070>=4037)) then if ((2705==2705) and ((v85<=(765 -(476 + 255))) or (3812<2316))) then if (v85>(1163 -(369 + (1312 -(83 + 468))))) then if (v82[v84[2 + 0 + 0 ]]==v84[6 -2 ]) then v76=v76 + ((18 -14) -3) ;else v76=v84[5 -(2 + 0) ];end else do return;end end elseif ((61==61) and (v85<=(273 -(64 + 174)))) then v82[v84[1741 -(404 + (2221 -886)) ]]=v84[1 + 2 ]~=(0 -0) ;elseif (v85>(24 + (33 -21))) then local v197=v84[(663 -(45 + 280)) -(144 + 192) ];v82[v197]=v82[v197]();else local v199=v84[218 -(42 + 174) ];v82[v199]=v82[v199](v82[v199 + 1 + 0 ]);end elseif (v85<=(34 + 6)) then if (v85<=(17 + 21)) then v65[v84[1507 -(363 + 1141) ]]=v82[v84[(5335 -3753) -(1183 + 397) ]];elseif ((v85==(118 -79)) or (699>=1296)) then v82[v84[2 + 0 ]][v84[12 -9 ]]=v84[3 + 1 ];else v82[v84[1977 -(1913 + 62) ]][v84[2 + 0 + 1 ]]=v84[(9 + 1) -(2000 -(109 + 1885)) ];end elseif ((v85<=(1974 -(565 + 1368))) or (2652<=1533)) then v65[v84[11 -8 ]]=v82[v84[1 + 1 ]];elseif (v85==(1703 -(1477 + 184))) then v82[v84[2]]=v82[v84[(666 + 1156) -(580 + 1239) ]][v84[11 -7 ]];else v82[v84[2 -0 ]]=v84[3 + 0 ]~=(0 + 0 + 0) ;end v76=v76 + (2 -1) ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
