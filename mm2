--[[
📚 Read:

⚠️- IF THE SCRIPT DOESN'T WORK, EXIT THE GAME AND WAIT 4-6 HOURS AND RE-EXECUTE, UNTIL IT WORKS

📜- This script is in beta version, so it may have some bugs.

🔨- Script fully made by *zflixy_* (discord)

🦠- Alt account detection system (may not work)

🔓- keyless

💾- dupe and trade scam does not work on private servers
]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v90=v2(v0(v30,16));if v19 then local v113=0;local v114;while true do if (v113==1) then return v114;end if (v113==0) then v114=v5(v90,v19);v19=nil;v113=1;end end else return v90;end end end);local function v20(v31,v32,v33) if v33 then local v91=(v31/((5 -3)^(v32-(2 -1))))%((1 + 1)^(((v33-(1 -0)) -(v32-1)) + (2 -1))) ;return v91-(v91%(1638 -(1523 + 114))) ;else local v92=619 -(555 + 64) ;local v93;while true do if (v92==(0 + 0)) then v93=((4062 -3129) -(857 + 74))^(v32-(569 -(367 + 201))) ;return (((v31%(v93 + v93))>=v93) and (1271 -(226 + 1044))) or ((1044 -(32 + 85)) -(214 + 699 + 14)) ;end end end end local function v21() local v34=0 + 0 ;local v35;while true do if (v34==(957 -(892 + (415 -(87 + 263))))) then v35=v1(v16,v18,v18);v18=v18 + (2 -(181 -(67 + 113))) ;v34=1 -0 ;end if (v34==(1 -0)) then return v35;end end end local function v22() local v36=0 -0 ;local v37;local v38;while true do if ((0 + 0 + 0)==v36) then v37,v38=v1(v16,v18,v18 + (4 -2) );v18=v18 + 2 + 0 ;v36=(3 -0) -2 ;end if (v36==(998 -(915 + 82))) then return (v38 * (1208 -((1989 -(1069 + 118)) + 150))) + v37 ;end end end local function v23() local v39,v40,v41,v42=v1(v16,v18,v18 + (6 -3) );v18=v18 + (8 -4) ;return (v42 * (2916682 + 13860534)) + (v41 * 65536) + (v40 * 256) + v39 ;end local function v24() local v43=v23();local v44=v23();local v45=1;local v46=(v20(v44,1139 -(116 + 1022) ,35 -15 ) * ((2 + 0)^(823 -(368 + 423)))) + v43 ;local v47=v20(v44,65 -44 ,49 -(10 + 8) );local v48=((v20(v44,122 -(1837 -(760 + 987)) )==((2356 -(1789 + 124)) -((1182 -(745 + 21)) + 26))) and  -(3 -2)) or (1 + 0) ;if (v47==(0 + 0)) then if (v46==(0 -0)) then return v48 * (0 -(0 + 0)) ;else v47=1081 -(1020 + 60) ;v45=438 -(145 + 293) ;end elseif (v47==(6936 -4889)) then return ((v46==(430 -(44 + 386))) and (v48 * ((1 + 0)/(1486 -(998 + 488))))) or (v48 * NaN) ;end return v8(v48,v47-(325 + 698) ) * (v45 + (v46/((2 + (0 -0))^(824 -(201 + 571))))) ;end local function v25(v49) local v50;if  not v49 then local v94=0 -0 ;while true do if (v94==0) then v49=v23();if (v49==(0 + 0)) then return "";end break;end end end v50=v3(v16,v18,(v18 + v49) -(1 + 0) );v18=v18 + v49 ;local v51={};for v67=1056 -(87 + 968) , #v50 do v51[v67]=v2(v1(v3(v50,v67,v67)));end return v6(v51);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=(function() return function(v95,v96,v97,v98,v99,v100,v101,v102,v103) local v104=(function() return 0 + 0 ;end)();local v95=(function() return;end)();local v96=(function() return;end)();while true do if (v104~=(574 -(507 + 67))) then else v95=(function() return 0;end)();v96=(function() return nil;end)();v104=(function() return 1;end)();end if (v104~=(1750 -(1013 + 736))) then else local v119=(function() return 0 + 0 ;end)();while true do if (v119~=(0 -0)) then else while true do if ((0 -0)~=v95) then else v96=(function() return v97();end)();if (v98(v96, #"]", #"[")~=0) then else local v160=(function() return 867 -(550 + 317) ;end)();local v161=(function() return;end)();local v162=(function() return;end)();local v163=(function() return;end)();while true do if (v160~=0) then else local v210=(function() return 0;end)();local v211=(function() return;end)();while true do if (v210==(0 -0)) then v211=(function() return 0;end)();while true do if (v211==(1 -0)) then v160=(function() return 1;end)();break;end if (0==v211) then v161=(function() return v98(v96,5 -3 , #"19(");end)();v162=(function() return v98(v96, #"0836",6);end)();v211=(function() return 1;end)();end end break;end end end if (v160~=(287 -(134 + 151))) then else if (v98(v162, #"~", #"{")~= #"/") then else v163[2]=(function() return v101[v163[2]];end)();end if (v98(v162,1667 -(970 + 695) ,2)~= #"}") then else v163[ #"-19"]=(function() return v101[v163[ #"gha"]];end)();end v160=(function() return 5 -2 ;end)();end if (v160==(1991 -(582 + 1408))) then local v212=(function() return 0 -0 ;end)();while true do if (v212==0) then v163=(function() return {v99(),v99(),nil,nil};end)();if (v161==(0 -0)) then local v226=(function() return 0 -0 ;end)();while true do if (v226==0) then v163[ #"xnx"]=(function() return v99();end)();v163[ #".dev"]=(function() return v99();end)();break;end end elseif (v161== #" ") then v163[ #"nil"]=(function() return v100();end)();elseif (v161==(1826 -(1195 + 629))) then v163[ #"91("]=(function() return v100() -(2^(20 -4)) ;end)();elseif (v161~= #"asd") then else local v231=(function() return 0;end)();local v232=(function() return;end)();while true do if (v231~=0) then else v232=(function() return 0;end)();while true do if ((241 -(187 + 54))~=v232) then else v163[ #"19("]=(function() return v100() -(2^16) ;end)();v163[ #".dev"]=(function() return v99();end)();break;end end break;end end end v212=(function() return 781 -(162 + 618) ;end)();end if (v212==1) then v160=(function() return 2;end)();break;end end end if (v160==3) then if (v98(v162, #"asd", #"xnx")~= #"[") then else v163[ #"asd1"]=(function() return v101[v163[ #"0836"]];end)();end v102[v103]=(function() return v163;end)();break;end end end break;end end return v95,v96,v97,v98,v99,v100,v101,v102,v103;end end end end end;end)();local v53=(function() return function(v105,v106,v107) local v108=(function() return 0 + 0 ;end)();local v109=(function() return;end)();while true do if ((0 + 0)==v108) then v109=(function() return 0;end)();while true do if (v109~=(0 -0)) then else v105[v106-#"/" ]=(function() return v107();end)();return v105,v106,v107;end end break;end end end;end)();local v54=(function() return {};end)();local v55=(function() return {};end)();local v56=(function() return {};end)();local v57=(function() return {v54,v55,nil,v56};end)();local v58=(function() return v23();end)();local v59=(function() return {};end)();for v69= #"\\",v58 do local v70=(function() return 0;end)();local v71=(function() return;end)();local v72=(function() return;end)();local v73=(function() return;end)();while true do if (v70~=0) then else v71=(function() return 0 -0 ;end)();v72=(function() return nil;end)();v70=(function() return 1;end)();end if (v70==(1 + 0)) then v73=(function() return nil;end)();while true do if (0==v71) then local v120=(function() return 1636 -(1373 + 263) ;end)();while true do if ((1001 -(451 + 549))==v120) then v71=(function() return 1;end)();break;end if (0==v120) then v72=(function() return v21();end)();v73=(function() return nil;end)();v120=(function() return 1 + 0 ;end)();end end end if (v71~=1) then else if (v72== #" ") then v73=(function() return v21()~=0 ;end)();elseif (v72==2) then v73=(function() return v24();end)();elseif (v72~= #"91(") then else v73=(function() return v25();end)();end v59[v69]=(function() return v73;end)();break;end end break;end end end v57[ #"-19"]=(function() return v21();end)();for v74= #".",v23() do FlatIdent_6FA1,Descriptor,v21,v20,v22,v23,v59,v54,v74=(function() return v52(FlatIdent_6FA1,Descriptor,v21,v20,v22,v23,v59,v54,v74);end)();end for v75= #",",v23() do v55,v75,v28=(function() return v53(v55,v75,v28);end)();end return v57;end local function v29(v61,v62,v63) local v64=v61[1];local v65=v61[2];local v66=v61[4 -1 ];return function(...) local v76=v64;local v77=v65;local v78=v66;local v79=v27;local v80=(1662 -(1477 + 184)) -0 ;local v81= -(1385 -(746 + (868 -230)));local v82={};local v83={...};local v84=v12("#",...) -(1 -0) ;local v85={};local v86={};for v110=341 -(204 + 14 + 123) ,v84 do if (v110>=v78) then v82[v110-v78 ]=v83[v110 + ((2438 -(564 + 292)) -(1535 + 46)) ];else v86[v110]=v83[v110 + 1 + 0 ];end end local v87=(v84-v78) + (1 -0) ;local v88;local v89;while true do v88=v76[v80];v89=v88[1 + 0 ];if (v89<=21) then if (v89<=(570 -(306 + 254))) then if (v89<=(1 + (8 -5))) then if (v89<=(1 -0)) then if ((432<588) and (v89==(1467 -((1203 -(244 + 60)) + 568)))) then v86[v88[2 + 0 + (476 -(41 + 435)) ]]();else local v123=v88[4 -2 ];local v124=v86[v88[606 -(268 + (1336 -(938 + 63))) ]];v86[v123 + (291 -(60 + 230)) ]=v124;v86[v123]=v124[v88[576 -(426 + 146) ]];end elseif (v89<=(1 + 1)) then v86[v88[1458 -(282 + 903 + 271) ]]=v29(v77[v88[814 -(569 + 242) ]],nil,v63);elseif (v89==3) then local v169=0 -0 ;local v170;while true do if (0==v169) then v170=v88[1 + 1 ];v86[v170](v13(v86,v170 + (1025 -(706 + 318)) ,v88[3]));break;end end else v86[v88[1253 -(721 + 530) ]]=v88[(2399 -(936 + 189)) -(945 + 326) ];end elseif ((4797>=3895) and (v89<=((6 + 10) -9))) then if (v89<=(5 + 0)) then v86[v88[702 -(271 + 429) ]]=v63[v88[3 + 0 ]];elseif (v89>(1506 -(1408 + 92))) then local v173=1086 -(461 + 625) ;local v174;while true do if ((3577==3577) and ((1288 -(993 + 295))==v173)) then v174=v88[1 + 1 ];v86[v174]=v86[v174](v13(v86,v174 + 1 ,v81));break;end end else v63[v88[3]]=v86[v88[1173 -(418 + 753) ]];end elseif (v89<=(4 + 4)) then local v131=v88[1 + 1 ];local v132=v86[v88[3]];v86[v131 + (1614 -(1565 + 48)) + 0 ]=v132;v86[v131]=v132[v88[2 + 2 ]];elseif (v89==(538 -(406 + 123))) then do return;end else local v177=1769 -(1749 + 13 + 7) ;local v178;while true do if ((3794>3693) and (v177==(0 + 0))) then v178=v88[1324 -(1249 + 73) ];v86[v178]=v86[v178](v86[v178 + 1 + (1138 -(782 + 356)) ]);break;end end end elseif (v89<=((1427 -(176 + 91)) -(466 + 679))) then if (v89<=(28 -16)) then if (v89>11) then local v136=v88[5 -(7 -4) ];v86[v136]=v86[v136](v13(v86,v136 + (1901 -(106 + (2643 -849))) ,v88[1 + 2 ]));else v86[v88[1 + 1 ]]=v86[v88[3]][v88[11 -7 ]];end elseif ((v89<=13) or (1275==4100)) then local v140=v88[5 -3 ];local v141,v142=v79(v86[v140](v13(v86,v140 + (115 -(4 + 110)) ,v88[587 -(57 + 527) ])));v81=(v142 + v140) -(1428 -((1133 -(975 + 117)) + (3261 -(157 + 1718)))) ;local v143=103 -(17 + 86) ;for v164=v140,v81 do v143=v143 + 1 + 0 ;v86[v164]=v141[v143];end elseif ((v89==14) or (1591>=3580)) then v86[v88[3 -1 ]]=v86[v88[3]];else local v181=v88[2];v86[v181](v13(v86,v181 + (2 -1) ,v88[169 -(122 + 44) ]));end elseif (v89<=(30 -12)) then if ((983<=1808) and (v89<=(52 -36))) then v86[v88[2 + 0 ]]=v88[1 + 2 ]~=(0 -0) ;elseif (v89>(82 -(30 + 35))) then v86[v88[2 + 0 + 0 ]]=v63[v88[1260 -(1043 + 214) ]];else v86[v88[(24 -17) -5 ]][v88[3]]=v88[(4157 -2941) -(323 + 889) ];end elseif (v89<=(50 -31)) then local v145=(1598 -(697 + 321)) -(361 + 219) ;local v146;while true do if (v145==(320 -(53 + 267))) then v146=v88[1 + 1 ];v86[v146]=v86[v146](v86[v146 + 1 ]);break;end end elseif (v89==(433 -(15 + 398))) then local v186=v88[984 -((48 -30) + 964) ];v86[v186]=v86[v186]();else local v188=v88[2];v86[v188]=v86[v188]();end elseif ((v89<=(120 -(186 -98))) or (2150<=1197)) then if ((3769>=1173) and (v89<=(16 + 10))) then if (v89<=(15 + 8)) then if ((1485==1485) and (v89==(872 -(20 + 830)))) then v80=v88[(6 -3) + 0 + 0 ];else v86[v88[128 -(116 + (18 -8)) ]]=v88[3];end elseif (v89<=24) then if ((v88[1 + (2 -1) ]==v86[v88[742 -(542 + (1423 -(322 + 905))) ]]) or (3315<=2782)) then v80=v80 + 1 ;else v80=v88[6 -3 ];end elseif (v89==(8 + 17)) then v86[v88[2 + 0 ]]=v88[2 + 1 ]~=(0 -0) ;else v86[v88[2]]=v86[v88[7 -4 ]];end elseif (v89<=(1580 -(1126 + (1036 -(602 + 9))))) then if (v89<=((1621 -(449 + 740)) -(118 + 287))) then if (v86[v88[2]]==v88[(887 -(826 + 46)) -11 ]) then v80=v80 + (1122 -(118 + 1003)) ;else v80=v88[8 -5 ];end elseif ((v89==(405 -(142 + 235))) or (876>=2964)) then v86[v88[2]]={};else for v207=v88[9 -(954 -(245 + 702)) ],v88[1 + 2 ] do v86[v207]=nil;end end elseif ((v89<=(1007 -(553 + 424))) or (2232>2497)) then local v150=v88[3 -1 ];v86[v150]=v86[v150](v13(v86,v150 + 1 + 0 ,v88[3]));elseif ((v89>31) or (2110<=332)) then do return;end else v86[v88[(6 -4) + 0 ]]=v29(v77[v88[1 + 1 + 1 ]],nil,v63);end elseif (v89<=(16 + 21)) then if ((3686>3172) and (v89<=(20 + 14))) then if (v89==(71 -38)) then local v152=0 -0 ;local v153;local v154;local v155;local v156;while true do if (v152==(2 -1)) then v81=(v155 + v153) -(1 + 0) ;v156=(1898 -(260 + 1638)) -0 ;v152=755 -(239 + 514) ;end if (v152==((441 -(382 + 58)) + 1)) then for v214=v153,v81 do v156=v156 + (1330 -(797 + 532)) ;v86[v214]=v154[v156];end break;end if (v152==(0 + 0)) then v153=v88[2];v154,v155=v79(v86[v153](v13(v86,v153 + 1 + 0 ,v88[6 -3 ])));v152=1203 -(373 + 829) ;end end else v86[v88[733 -(476 + 255) ]]={};end elseif (v89<=(1165 -(369 + 761))) then if (v86[v88[2]]==v88[3 + 1 ]) then v80=v80 + 1 ;else v80=v88[5 -2 ];end elseif (v89>36) then v86[v88[3 -(3 -2) ]]=v86[v88[241 -(54 + 10 + 174) ]][v88[4]];elseif (v88[1 + (1 -0) ]==v86[v88[4]]) then v80=v80 + (1 -0) ;else v80=v88[3];end elseif (v89<=(376 -(144 + (570 -378)))) then if ((v89<=38) or (4474<820)) then for v167=v88[218 -(42 + 174) ],v88[3 + 0 ] do v86[v167]=nil;end elseif (v89>(33 + 6)) then v86[v88[1 + 1 ]][v88[1507 -((1568 -(902 + 303)) + (2505 -1364)) ]]=v88[1584 -(1183 + 397) ];else v63[v88[8 -5 ]]=v86[v88[2 + 0 ]];end elseif (v89<=((74 -43) + 10)) then local v158=v88[1977 -(1913 + 62) ];v86[v158]=v86[v158](v13(v86,v158 + 1 + 0 ,v81));elseif (v89==(110 -68)) then v80=v88[(167 + 1769) -((2255 -(1121 + 569)) + 1368) ];else v86[v88[2]]();end v80=v80 + (3 -2) ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
